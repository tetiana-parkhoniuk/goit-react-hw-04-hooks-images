{"version":3,"sources":["components/ImageGalleryItem/ImageGalleryItem.module.css","components/Modal/Modal.module.css","components/ImageGallery /ImageGallery.module.css","components/Button/Button.module.css","components/Spinner/Spinner.module.css","App.module.css","components/Searchbar/Searchbar.module.css","components/Searchbar/Searchbar.js","components/ImageGalleryItem/ImageGalleryItem.js","components/ImageGallery /ImageGallery.js","components/Button/Button.js","components/Spinner/Spinner.js","components/Modal/Modal.js","services/api.js","App.js","index.js"],"names":["module","exports","Searchbar","onSubmit","className","styles","searchbar","searchForm","event","preventDefault","target","elements","searchQuery","value","type","searchFormBtn","searchFormBtnLabel","searchFormInput","name","autoComplete","autoFocus","placeholder","ImageGalleryItem","webformatURL","tags","onImageClick","largeImageURL","imageGalleryItem","onClick","src","alt","imageGalleryItemImage","ImageGallery","images","onSelect","imageGallery","map","image","id","Button","button","prototypes","PropTypes","func","isRequired","Spinner","spinner","color","height","width","timeout","modalRoot","document","querySelector","Modal","onClose","useEffect","window","addEventListener","handleKeyDown","removeEventListener","code","console","log","createPortal","overlay","currentTarget","modal","axios","defaults","baseURL","fetchImages","a","page","API_KEY","params","get","response","data","hits","App","useState","setSearchQuery","setImages","setPage","reqStatus","setReqStatus","selectedImage","setSelectedImage","prevState","scrollOnLoadMore","toast","error","getImages","scrollTo","top","documentElement","scrollHeight","behavior","isLoading","showLoadMoreBtn","length","app","position","toastOptions","duration","imageURL","prevPage","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.d2d3fc1e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"imageGalleryItem\":\"ImageGalleryItem_imageGalleryItem__1LEDw\",\"imageGalleryItemImage\":\"ImageGalleryItem_imageGalleryItemImage__2Xjb0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"overlay\":\"Modal_overlay__2GjdW\",\"modal\":\"Modal_modal__P3_V5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"imageGallery\":\"ImageGallery_imageGallery__1IlRL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__3QF_k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinner\":\"Spinner_spinner__1Neu5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__1kX79\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchbar\":\"Searchbar_searchbar__jo466\",\"searchForm\":\"Searchbar_searchForm__23jwf\",\"searchFormBtn\":\"Searchbar_searchFormBtn__24U6R\",\"searchFormBtnLabel\":\"Searchbar_searchFormBtnLabel__dw1vf\",\"searchFormInput\":\"Searchbar_searchFormInput__tpesZ\"};","import PropTypes from 'prop-types';\nimport styles from './Searchbar.module.css';\n\nexport default function Searchbar({ onSubmit }) {\n  const handleSearch = event => {\n    event.preventDefault();\n    onSubmit(event.target.elements.searchQuery.value);\n  };\n\n  return (\n    <header className={styles.searchbar}>\n      <form className={styles.searchForm} onSubmit={handleSearch}>\n        <button type=\"submit\" className={styles.searchFormBtn}>\n          <span className={styles.searchFormBtnLabel}>Search</span>\n        </button>\n\n        <input\n          className={styles.searchFormInput}\n          name=\"searchQuery\"\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search images and photos\"\n        />\n      </form>\n    </header>\n  );\n}\n\nSearchbar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport styles from './ImageGalleryItem.module.css';\n\nexport default function ImageGalleryItem({\n  webformatURL,\n  tags,\n  onImageClick,\n  largeImageURL,\n}) {\n  return (\n    <li\n      className={styles.imageGalleryItem}\n      onClick={() => onImageClick(largeImageURL)}\n    >\n      <img\n        src={webformatURL}\n        alt={tags}\n        className={styles.imageGalleryItemImage}\n      />\n    </li>\n  );\n}\n\nImageGalleryItem.propTypes = {\n  webformatURL: PropTypes.string.isRequired,\n  tags: PropTypes.string.isRequired,\n  onImageClick: PropTypes.func.isRequired,\n  largeImageURL: PropTypes.string.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport ImageGalleryItem from '../ImageGalleryItem';\nimport styles from './ImageGallery.module.css';\n\nexport default function ImageGallery({ images, onSelect }) {\n  return (\n    <ul className={styles.imageGallery}>\n      {images.map(image => (\n        <ImageGalleryItem\n          key={image.id}\n          webformatURL={image.webformatURL}\n          tags={image.tags}\n          onImageClick={onSelect}\n          largeImageURL={image.largeImageURL}\n        />\n      ))}\n    </ul>\n  );\n}\n\nImageGallery.propTypes = {\n  images: PropTypes.array.isRequired,\n  onSelect: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport styles from './Button.module.css';\n\nexport default function Button({ onClick }) {\n  return (\n    <button type=\"button\" className={styles.button} onClick={onClick}>\n      Load more\n    </button>\n  );\n}\n\nButton.prototypes = {\n  onClick: PropTypes.func.isRequired,\n};\n","import Loader from 'react-loader-spinner';\nimport styles from 'components/Spinner/Spinner.module.css';\n\nexport default function Spinner() {\n  return (\n    <div className={styles.spinner}>\n      <Loader\n        type=\"ThreeDots\"\n        color=\"#d3d8e8\"\n        height={100}\n        width={100}\n        timeout={3000}\n      />\n    </div>\n  );\n}\n","import React, { useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport PropTypes from 'prop-types';\nimport styles from './Modal.module.css';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nexport default function Modal({ onClose, largeImageURL }) {\n  useEffect(() => {\n    window.addEventListener('keydown', handleKeyDown);\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    }\n  });\n\n  const handleKeyDown = event => {\n    if (event.code === 'Escape') {\n      console.log(event);\n      onClose();\n    }\n  };\n\n  const handleOverlayClick = event => {\n    if (event.currentTarget === event.target) {\n      onClose();\n    }\n  };\n\n  return createPortal(\n      <div className={styles.overlay} onClick={handleOverlayClick}>\n        <div className={styles.modal}>\n          <img src={largeImageURL} alt=\"\" />\n        </div>\n      </div>,\n      modalRoot,\n  );\n}\n\nModal.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  largeImageURL: PropTypes.string.isRequired,\n};\n\n\n////==== Original Code ====////\n\n// export default class Modal extends Component {\n//   componentDidMount() {\n//     window.addEventListener('keydown', this.handleKeyDown);\n//   }\n\n//   componentWillUnmount() {\n//     window.removeEventListener('keydow', this.handleKeyDown);\n//   }\n\n//   handleKeyDown = event => {\n//     if (event.code === 'Escape') {\n//       this.props.onClose();\n//     }\n//   };\n\n//   handleOverlayClick = event => {\n//     if (event.currentTarget === event.target) {\n//       this.props.onClose();\n//     }\n//   };\n\n//   render() {\n//     return createPortal(\n//       <div className={styles.overlay} onClick={this.handleOverlayClick}>\n//         <div className={styles.modal}>\n//           <img src={this.props.largeImageURL} alt=\"\" />\n//         </div>\n//       </div>,\n//       modalRoot,\n//     );\n//   }\n// }\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://pixabay.com/api/';\n\nexport const fetchImages = async (searchQuery, page=1) => {\n  const API_KEY = '21882924-40498065f1aa5022828b315f8';\n  const params = `page=${page}&key=${API_KEY}&image_type=photo&orientation=horizontal&per_page=12`;\n  const response = await axios.get(`?q=${searchQuery}&${params}`);\n  return response.data.hits;\n};\n","import React, { useState, useEffect } from 'react';\nimport toast, { Toaster } from 'react-hot-toast';\nimport Searchbar from 'components/Searchbar';\nimport ImageGallery from 'components/ImageGallery ';\nimport Button from 'components/Button';\nimport Spinner from 'components/Spinner';\nimport Modal from 'components/Modal';\nimport { fetchImages } from 'services/api';\nimport styles from './App.module.css';\n\nexport default function App() {\n  const [searchQuery, setSearchQuery] = useState('');\n  const [images, setImages] = useState([]);\n  const [page, setPage] = useState(1);\n  const [reqStatus, setReqStatus] = useState('idle');\n  const [selectedImage, setSelectedImage] = useState(null);\n\n  useEffect(() => {\n    if (searchQuery === '') return;\n    async function getImages() {\n      try {\n        setReqStatus('pending');\n        const images = await fetchImages(\n          searchQuery,\n          page\n        );\n        setImages(prevState => [...prevState, ...images]);\n        setReqStatus('fulfilled');\n        scrollOnLoadMore();\n      } catch (error) {\n        setReqStatus('rejected');\n        toast.error('Something went worng, please try again later.');\n      }\n    }\n    getImages();\n  }, [searchQuery, page]);\n\n  const handleFormSubmit = searchQuery => {\n    setSearchQuery(searchQuery);\n    setImages([]);\n    setPage(1);\n  };\n\n  const incrementPage = () => {\n    setPage(prevPage => prevPage +1)\n  };\n\n  const scrollOnLoadMore = () => {\n    window.scrollTo({\n      top: document.documentElement.scrollHeight,\n      behavior: 'smooth',\n    });\n  };\n\n  const toggleModal = () => {\n    setSelectedImage(!selectedImage);\n  };\n\n  const handleSelectedImage = imageURL => {\n    setSelectedImage(imageURL);\n  };\n\n\n  const isLoading = reqStatus === 'pending';\n  const showLoadMoreBtn = images.length > 0;\n\n  return (\n    <div className={styles.app}>\n        <Toaster position=\"top-right\" toastOptions={{ duration: 2000 }} />\n\n        <Searchbar onSubmit={handleFormSubmit} />\n\n        <ImageGallery images={images} onSelect={handleSelectedImage} />\n\n        {isLoading && <Spinner />}\n\n        {showLoadMoreBtn && <Button onClick={incrementPage} />}\n\n        {selectedImage && (\n          <Modal onClose={toggleModal} largeImageURL={selectedImage} />\n        )}\n    </div>\n  )\n}\n\n////==== Original Code ====////\n\n// export default class App extends Component {\n//   state = {\n//     searchQuery: null,\n//     images: [],\n//     page: 1,\n//     reqStatus: 'idle',\n//     selectedImage: null,\n//   };\n\n//   async componentDidUpdate(prevProps, prevState) {\n//     if (prevState.searchQuery !== this.state.searchQuery) {\n//       try {\n//         this.setState({ reqStatus: 'pending' });\n\n//         const images = await fetchImages(\n//           this.state.searchQuery,\n//           this.state.page,\n//         );\n\n//         this.setState({ images, reqStatus: 'fulfilled' });\n//       } catch (error) {\n//         this.setState({ reqStatus: 'rejected' });\n//         toast.error('Something went worng, please try again later.');\n//       }\n//     } else if (prevState.page !== this.state.page) {\n      // try {\n      //   this.setState({ reqStatus: 'pending' });\n\n      //   const images = await fetchImages(\n      //     this.state.searchQuery,\n      //     this.state.page,\n      //   );\n\n      //   this.setState({\n      //     images: [...this.state.images, ...images],\n      //     reqStatus: 'fulfilled',\n      //   });\n      //   this.scrollOnLoadMore();\n      // } catch (error) {\n      //   this.setState({ reqStatus: 'rejected' });\n      //   toast.error('Something went worng, please try again later.');\n      // }\n//     }\n//   }\n\n//   handleFormSubmit = searchQuery => {\n//     this.setState({ searchQuery, page: 1, images: [] });\n//   };\n\n//   incrementPage = () => {\n//     this.setState({ page: this.state.page + 1 });\n//   };\n\n//   scrollOnLoadMore = () => {\n//     window.scrollTo({\n//       top: document.documentElement.scrollHeight,\n//       behavior: 'smooth',\n//     });\n//   };\n\n//   toggleModal = () => {\n//     this.setState(({ selectedImage }) => ({\n//       selectedImage: !selectedImage,\n//     }));\n//   };\n\n//   handleSelectedImage = imageURL => {\n//     this.setState({ selectedImage: imageURL });\n//   };\n\n//   render() {\n//     const { images, reqStatus, selectedImage } = this.state;\n//     const isLoading = reqStatus === 'pending';\n//     const showLoadMoreBtn = images.length > 0;\n\n//     return (\n//       <div className={styles.app}>\n//         <Toaster position=\"top-right\" toastOptions={{ duration: 2000 }} />\n\n//         <Searchbar onSubmit={this.handleFormSubmit} />\n\n//         {<ImageGallery images={images} onSelect={this.handleSelectedImage} />}\n\n//         {isLoading && <Spinner />}\n\n//         {showLoadMoreBtn && <Button onClick={this.incrementPage} />}\n\n//         {selectedImage && (\n//           <Modal onClose={this.toggleModal} largeImageURL={selectedImage} />\n//         )}\n//       </div>\n//     );\n//   }\n// }\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'modern-normalize/modern-normalize.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}